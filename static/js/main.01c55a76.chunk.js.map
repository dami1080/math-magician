{"version":3,"sources":["components/logic/operate.js","components/UI/CalculatorRow.js","components/UI/Calculator.js","components/logic/calculate.js","pages/Home.js","pages/Quote.js","components/UI/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","CalculatorRow","props","items","onClick","type","value","className","tableData","Calculator","useState","total","obj","setObj","handleClick","e","buttonName","next","match","includes","parseFloat","calculate","target","colSpan","Home","Quote","Navbar","href","to","activeClassName","exact","App","state","path","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qYAIe,SAASA,EAAQC,EAAWC,EAAWC,GACpD,IAAMC,EAAMC,IAAIJ,GACVK,EAAMD,IAAIH,GAChB,GAAkB,MAAdC,EACF,OAAOC,EAAIG,KAAKD,GAAKE,WAEvB,GAAkB,MAAdL,EACF,OAAOC,EAAIK,MAAMH,GAAKE,WAExB,GAAkB,MAAdL,EACF,OAAOC,EAAIM,MAAMJ,GAAKE,WAExB,GAAkB,SAAdL,EACF,IACE,OAAOC,EAAIO,IAAIL,GAAKE,WACpB,MAAOI,GACP,MAAO,qBAGX,GAAkB,MAAdT,EACF,OAAOC,EAAIS,IAAIP,GAAKE,WAEtB,MAAMM,MAAM,sBAAD,OAAuBX,EAAvB,M,WCDEY,EArBO,SAACC,GACrB,IAAQC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,QAEf,OACE,+BACE,6BAAI,uBAAOC,KAAK,SAASC,MAAOH,EAAM,GAAIC,QAASA,MACnD,6BAAI,uBAAOC,KAAK,SAASC,MAAOH,EAAM,GAAIC,QAASA,MACnD,6BAAI,uBAAOC,KAAK,SAASC,MAAOH,EAAM,GAAIC,QAASA,MACnD,oBAAIG,UAAU,gBAAd,SAA8B,uBAAOF,KAAK,SAASC,MAAOH,EAAM,GAAIC,QAASA,UCP7EI,EAAY,CAChB,CAAC,KAAM,MAAO,IAAK,QACnB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAsCHC,EAnCI,WACjB,IACA,EAAsBC,mBADD,CAAEC,MAAO,EAAGtB,UAAW,KAC5C,mBAAOuB,EAAP,KAAYC,EAAZ,KAEMC,EAAc,SAACC,GACnBF,ECFW,SAAmBD,EAAKI,GACrC,MAAmB,OAAfA,EACK,CACLL,MAAO,EACPM,KAAM,KACN5B,UAAW,MAIF2B,EArBCE,MAAM,UAsBC,MAAfF,GAAmC,MAAbJ,EAAIK,KACrB,GAGLL,EAAIvB,UACFuB,EAAIK,KACC,2BAAKL,GAAZ,IAAiBK,KAAML,EAAIK,KAAOD,IAE7B,2BAAKJ,GAAZ,IAAiBK,KAAMD,IAGrBJ,EAAIK,KACC,CACLA,KAAML,EAAIK,KAAOD,EACjBL,MAAO,MAGJ,CACLM,KAAMD,EACNL,MAAO,MAIQ,MAAfK,EACEJ,EAAIK,KACFL,EAAIK,KAAKE,SAAS,KACb,eAAKP,GAEP,2BAAKA,GAAZ,IAAiBK,KAAK,GAAD,OAAKL,EAAIK,KAAT,OAEnBL,EAAIvB,UACC,CAAE4B,KAAM,MAEbL,EAAID,MACFC,EAAID,MAAMQ,SAAS,KACd,GAEF,CAAER,MAAM,GAAD,OAAKC,EAAID,MAAT,MAET,CAAEA,MAAO,MAGC,MAAfK,EACEJ,EAAIK,MAAQL,EAAIvB,UACX,CACLsB,MAAOzB,EAAQ0B,EAAID,MAAOC,EAAIK,KAAML,EAAIvB,WACxC4B,KAAM,KACN5B,UAAW,MAIR,GAGU,QAAf2B,EACEJ,EAAIK,KACC,2BAAKL,GAAZ,IAAiBK,OAAQ,EAAIG,WAAWR,EAAIK,OAAOvB,aAEjDkB,EAAID,MACC,2BAAKC,GAAZ,IAAiBD,QAAS,EAAIS,WAAWR,EAAID,QAAQjB,aAEhD,GAYJkB,EAAIK,OAAQL,EAAID,OAAUC,EAAIvB,UAK/BuB,EAAIvB,UACFuB,EAAID,QAAUC,EAAIK,KACb,2BAAKL,GAAZ,IAAiBvB,UAAW2B,IAGvB,CACLL,MAAOzB,EAAQ0B,EAAID,MAAOC,EAAIK,KAAML,EAAIvB,WACxC4B,KAAM,KACN5B,UAAW2B,GAOVJ,EAAIK,KAKF,CACLN,MAAOC,EAAIK,KACXA,KAAM,KACN5B,UAAW2B,GAPJ,CAAE3B,UAAW2B,GApBb,2BAAKJ,GAAZ,IAAiBvB,UAAW2B,IDlFrBK,CAAUT,EAAKG,EAAEO,OAAOhB,SAGjC,OACE,sBAAKC,UAAU,kBAAf,UACE,oBAAIA,UAAU,qBAAd,iCACA,uBAAOA,UAAU,4BAAjB,SACE,kCACE,oBAAIA,UAAU,SAAd,SACE,qBAAIgB,QAAQ,IAAZ,UACGX,EAAID,MACJC,EAAIvB,UACJuB,EAAIK,UAGT,cAAC,EAAD,CAAed,MAAOK,EAAU,GAAIJ,QAASU,IAC7C,cAAC,EAAD,CAAeX,MAAOK,EAAU,GAAIJ,QAASU,IAC7C,cAAC,EAAD,CAAeX,MAAOK,EAAU,GAAIJ,QAASU,IAC7C,cAAC,EAAD,CAAeX,MAAOK,EAAU,GAAIJ,QAASU,IAC7C,+BACE,oBAAIS,QAAQ,IAAZ,SAAgB,uBAAOlB,KAAK,SAASD,QAASU,EAAaR,MAAM,QACjE,6BAAI,uBAAOD,KAAK,SAASD,QAASU,EAAaR,MAAM,QACrD,oBAAIC,UAAU,gBAAd,SAA8B,uBAAOF,KAAK,SAASD,QAASU,EAAaR,MAAM,oBET5EkB,G,MA3BF,kBACX,sBAAKjB,UAAU,YAAf,UACE,sDACA,sBAAKA,UAAU,cAAf,UACE,8dAUA,seCGSkB,G,MAjBD,kBACZ,qBAAKlB,UAAU,cAAf,SACE,gCACE,yIAGE,2DAEF,qIAGE,0ECMOmB,G,MAhBA,kBACb,sBAAKnB,UAAU,SAAf,UACE,mBAAGoB,KAAK,IAAIpB,UAAU,YAAtB,4BACA,+BACE,6BACE,cAAC,IAAD,CAASqB,GAAG,IAAIC,gBAAgB,cAAcC,OAAK,EAAnD,oBAEF,6BACE,cAAC,IAAD,CAASF,GAAG,cAAcC,gBAAgB,cAAcC,OAAK,EAA7D,0BAEF,6BACE,cAAC,IAAD,CAASF,GAAG,SAASC,gBAAgB,cAAcC,OAAK,EAAxD,6BCuBOC,E,kDA7Bb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,GAFI,E,0CAKnB,WACE,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOF,OAAK,EAACG,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,qBAAK1B,UAAU,MAAf,SACE,cAAC,EAAD,QAIJ,cAAC,IAAD,CAAO0B,KAAK,IAAZ,SACE,cAAC,EAAD,gB,GAtBMC,IAAMC,WCMTC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.01c55a76.chunk.js","sourcesContent":["/* eslint import/no-extraneous-dependencies: [\"error\", {\"peerDependencies\": true}] */\r\n\r\nimport Big from 'big.js';\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n  const one = Big(numberOne);\r\n  const two = Big(numberTwo);\r\n  if (operation === '+') {\r\n    return one.plus(two).toString();\r\n  }\r\n  if (operation === '-') {\r\n    return one.minus(two).toString();\r\n  }\r\n  if (operation === 'x') {\r\n    return one.times(two).toString();\r\n  }\r\n  if (operation === 'รท') {\r\n    try {\r\n      return one.div(two).toString();\r\n    } catch (err) {\r\n      return \"Can't divide by 0.\";\r\n    }\r\n  }\r\n  if (operation === '%') {\r\n    return one.mod(two).toString();\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n}\r\n","/* eslint import/no-extraneous-dependencies: [\"error\", {\"peerDependencies\": true}] */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CalculatorRow = (props) => {\r\n  const { items, onClick } = props;\r\n\r\n  return (\r\n    <tr>\r\n      <td><input type=\"button\" value={items[0]} onClick={onClick} /></td>\r\n      <td><input type=\"button\" value={items[1]} onClick={onClick} /></td>\r\n      <td><input type=\"button\" value={items[2]} onClick={onClick} /></td>\r\n      <td className=\"orange-colour\"><input type=\"button\" value={items[3]} onClick={onClick} /></td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nCalculatorRow.propTypes = {\r\n  items: PropTypes.arrayOf.isRequired,\r\n};\r\n\r\nCalculatorRow.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CalculatorRow;\r\n","import React, { useState } from 'react';\r\nimport './Calculator.css';\r\nimport calculate from '../logic/calculate';\r\nimport CalculatorRow from './CalculatorRow';\r\n\r\nconst tableData = [\r\n  ['AC', '+/-', '%', 'รท'],\r\n  ['7', '8', '9', 'x'],\r\n  ['4', '5', '6', '-'],\r\n  ['1', '2', '3', '+'],\r\n];\r\n\r\nconst Calculator = () => {\r\n  const initialValue = { total: 0, operation: '' };\r\n  const [obj, setObj] = useState(initialValue);\r\n\r\n  const handleClick = (e) => {\r\n    setObj(calculate(obj, e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator-page\">\r\n      <h2 className=\"calculator-heading\">Let&apos;s do some math!</h2>\r\n      <table className=\"calculator table-bordered\">\r\n        <tbody>\r\n          <tr className=\"output\">\r\n            <td colSpan=\"4\">\r\n              {obj.total}\r\n              {obj.operation}\r\n              {obj.next}\r\n            </td>\r\n          </tr>\r\n          <CalculatorRow items={tableData[0]} onClick={handleClick} />\r\n          <CalculatorRow items={tableData[1]} onClick={handleClick} />\r\n          <CalculatorRow items={tableData[2]} onClick={handleClick} />\r\n          <CalculatorRow items={tableData[3]} onClick={handleClick} />\r\n          <tr>\r\n            <td colSpan=\"2\"><input type=\"button\" onClick={handleClick} value=\"0\" /></td>\r\n            <td><input type=\"button\" onClick={handleClick} value=\".\" /></td>\r\n            <td className=\"orange-colour\"><input type=\"button\" onClick={handleClick} value=\"=\" /></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import operate from './operate';\r\n\r\nfunction isNumber(item) {\r\n  return !!item.match(/[0-9]+/);\r\n}\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:s      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === 'AC') {\r\n    return {\r\n      total: 0,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === '0' && obj.next === '0') {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return { ...obj, next: obj.next + buttonName };\r\n      }\r\n      return { ...obj, next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      return {\r\n        next: obj.next + buttonName,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === '.') {\r\n    if (obj.next) {\r\n      if (obj.next.includes('.')) {\r\n        return { ...obj };\r\n      }\r\n      return { ...obj, next: `${obj.next}.` };\r\n    }\r\n    if (obj.operation) {\r\n      return { next: '0.' };\r\n    }\r\n    if (obj.total) {\r\n      if (obj.total.includes('.')) {\r\n        return {};\r\n      }\r\n      return { total: `${obj.total}.` };\r\n    }\r\n    return { total: '0.' };\r\n  }\r\n\r\n  if (buttonName === '=') {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    // '=' with no operation, nothing to do\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === '+/-') {\r\n    if (obj.next) {\r\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  // if (!obj.next && !obj.total) {\r\n  //   return {};\r\n  // }\r\n\r\n  // User pressed an operation after pressing '='\r\n  if (!obj.next && obj.total && !obj.operation) {\r\n    return { ...obj, operation: buttonName };\r\n  }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    if (obj.total && !obj.next) {\r\n      return { ...obj, operation: buttonName };\r\n    }\r\n\r\n    return {\r\n      total: operate(obj.total, obj.next, obj.operation),\r\n      next: null,\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => (\r\n  <div className=\"home-page\">\r\n    <h2>Welcome to our page!</h2>\r\n    <div className=\"welcome-msg\">\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n        sed do eiusmod tempor incididunt ut labore et dolore magna\r\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n        ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n        Duis aute irure dolor in reprehenderit in voluptate velit\r\n        esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\n        occaecat cupidatat non proident, sunt in culpa qui officia\r\n        deserunt mollit anim id est laborum.\r\n      </p>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n        sed do eiusmod tempor incididunt ut labore et dolore magna\r\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n        ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n        Duis aute irure dolor in reprehenderit in voluptate velit\r\n        esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\n        occaecat cupidatat non proident, sunt in culpa qui officia\r\n        deserunt mollit anim id est laborum.\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Quote.css';\r\n\r\nconst Quote = () => (\r\n  <div className=\"quotes-page\">\r\n    <div>\r\n      <p>\r\n        Mathematics knows no races or geographic boundaries; for mathematics,\r\n        the cultural world is one country.\r\n        <span>โ David Hilbert</span>\r\n      </p>\r\n      <p>\r\n        Mathematics is not about numbers, equations, computations, or algorithms:\r\n        it is about understanding.\r\n        <span>โ William Paul Thurston</span>\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Quote;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar\">\r\n    <a href=\"/\" className=\"nav-brand\">Math Magicians</a>\r\n    <ul>\r\n      <li>\r\n        <NavLink to=\"/\" activeClassName=\"active-link\" exact>Home</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/calculator\" activeClassName=\"active-link\" exact>Calculator</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/quote\" activeClassName=\"active-link\" exact>Quote</NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Calculator from './components/UI/Calculator';\r\nimport Home from './pages/Home';\r\nimport Quote from './pages/Quote';\r\nimport Navbar from './components/UI/Navbar';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <fragment>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n          <Route path=\"/calculator\">\r\n            <div className=\"App\">\r\n              <Calculator />\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"*\">\r\n            <Quote />\r\n          </Route>\r\n        </Switch>\r\n      </fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}